@model Salino.Models.User
@using Salino.DataLayer;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    SalinoContext db = new SalinoContext();
}




<section class="content-header">
    <h1 style="margin-bottom:15px">
        کاربران

    </h1>
    <ol class="breadcrumb">
        <li><a href="/Admin/Default/Index"><i class="fa fa-dashboard"></i> مدیریت</a></li>
        <li class="active">      <a href="/Admin/Users/Index">کاربران</a></li>
        <li class="active">ویرایش کاربر @Model.Mobile</li>
    </ol>
</section>
<div class="box box-info container">


    @using (Html.BeginForm("Edit", "Users"))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.UserPassword)
 
        <div class="form-horizontal">
            <h4>ویرایش کاربر @Model.Mobile</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.RoleId, "نقش", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

          
            @*<div class="form-group">
                @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.Label("استان", htmlAttributes: new { @class = "control-label col-md-2", style = " margin-top:7px;" })

                <div class="col-md-10">
                    استان جاری: @db.Ostans.Where(x => x.Id == Model.OstanId).FirstOrDefault().ostanname
                    <input hidden value="@Model.ostanname" name="ostannameCurrent" />
                    <select name="ostanname" onChange="iranwebsv(this.value);" class="form-control">
                        <option value="0">لطفا استان را انتخاب نمایید</option>
                        <option value="1">تهران</option>
                        <option value="2">گیلان</option>
                        <option value="3">آذربایجان شرقی</option>
                        <option value="4">خوزستان</option>
                        <option value="5">فارس</option>
                        <option value="6">اصفهان</option>
                        <option value="7">خراسان رضوی</option>
                        <option value="8">قزوین</option>
                        <option value="9">سمنان</option>
                        <option value="10">قم</option>
                        <option value="11">مرکزی</option>
                        <option value="12">زنجان</option>
                        <option value="13">مازندران</option>
                        <option value="14">گلستان</option>
                        <option value="15">اردبیل</option>
                        <option value="16">آذربایجان غربی</option>
                        <option value="17">همدان</option>
                        <option value="18">کردستان</option>
                        <option value="19">کرمانشاه</option>
                        <option value="20">لرستان</option>
                        <option value="21">بوشهر</option>
                        <option value="22">کرمان</option>
                        <option value="23">هرمزگان</option>
                        <option value="24">چهارمحال و بختیاری</option>
                        <option value="25">یزد</option>
                        <option value="26">سیستان و بلوچستان</option>
                        <option value="27">ایلام</option>
                        <option value="28">کهگلویه و بویراحمد</option>
                        <option value="29">خراسان شمالی</option>
                        <option value="30">خراسان جنوبی</option>
                        <option value="31">البرز</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                @Html.Label("شهر", htmlAttributes: new { @class = "control-label col-md-2", style = " margin-top:7px;" })
                <div class="col-md-10">
                    شهرجاری: @Model.cityname
                    <input hidden value="@Model.cityname" name="citynameCurrent" />
                    <select name="cityname" id="city" class="form-control">
                        <option value="0">لطفا استان را انتخاب نمایید</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                 
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                 
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Createdate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Createdate, new { htmlAttributes = new { @class = "form-control" , disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.Createdate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CodeActivate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CodeActivate, new { htmlAttributes = new { @class = "form-control" , disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.CodeActivate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button class="btn btn-social btn-success" type="submit">
                        <i class="fa fa-save"></i> ویرایش
                    </button>
                    <a class="btn btn-social btn-pinterest" href="/Admin/Users/index">
                        <i class="fa fa-backward"></i> بازگشت
                    </a>
                </div>
            </div>
        </div>
    }



</div>
<script src="~/Scripts/city.js"></script>