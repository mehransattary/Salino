@*@model Salino.Models.Product

    @{
        ViewBag.Title = "Create";
        Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
        int currentPage = Convert.ToInt32(ViewBag.currentPage);
    }

    <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>


    <section class="content-header">
        <h1 style="margin-bottom:15px">
            محصولات

        </h1>
        <ol class="breadcrumb">
            <li><a href="/Admin/Default/Index"><i class="fa fa-dashboard"></i> مدیریت</a></li>
            <li class="active"><a href="/Admin/Products/Index"> محصولات</a></li>
            <li class="active"><a href="/Admin/Products/Create"> محصول جدید</a></li>
        </ol>
    </section>
    <div class="box box-info container" id="createproduct">


        @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>محصول جدید</h4>

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.GroupId, "گروه", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("GroupId", null, htmlAttributes: new { @class = "form-control", @style = "height: 35px;" })
                        @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />

                <div class="form-group">
                    @Html.LabelFor(model => model.CodeKala, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CodeKala, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CodeKala, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                        @Html.LabelFor(model => model.ColorId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ColorId", null, htmlAttributes: new { @class = "form-control", @style = "height: 35px;" })
                            @Html.ValidationMessageFor(model => model.ColorId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ColorId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">


                        @foreach (var item in ViewBag.SelectColorId as List<Salino.Models.Color>)
                        {


                            <label>
                                <input type="checkbox" id="@item.Id" value="@item.Id" v-model="colorsSelected" class="flat-red">
                                @item.color
                            </label>
                        }


                    </div>


                </div>
                <hr />


                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />


                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />



                <div class="form-group">
                    @Html.LabelFor(model => model.IsShow, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.IsShow)
                        @Html.ValidationMessageFor(model => model.IsShow, "", new { @class = "text-danger" })

                    </div>
                </div>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.Imgdetail, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <input class="input-lg" type="file" name="filedetail" onchange="readURL1(this);" />
                        <img id="blah" src="~/Content/tn_WallpaperGram.IR_1561882027_z90271.jpg" alt="your image" style="height:auto;width:auto;" class="img-responsive img-thumbnail" />
                        <script>
                            function readURL1(input) {
                                if (input.files && input.files[0]) {
                                    var reader = new FileReader();

                                    reader.onload = function (e) {
                                        $('#blah')
                                            .attr('src', e.target.result);
                                    };

                                    reader.readAsDataURL(input.files[0]);
                                }
                            }
                        </script>
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.ImgdetailMob, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <input class="input-lg" type="file" name="filedetailmob" onchange="readURLdetailMob(this);" />
                        <img id="detailMob" src="~/Content/tn_WallpaperGram.IR_1561882027_z90271.jpg" alt="your image" style="height:auto;width:auto;" class="img-responsive img-thumbnail" />
                        <script>
                            function readURLdetailMob(input) {
                                if (input.files && input.files[0]) {
                                    var reader = new FileReader();

                                    reader.onload = function (e) {
                                        $('#detailMob')
                                            .attr('src', e.target.result);
                                    };

                                    reader.readAsDataURL(input.files[0]);
                                }
                            }
                        </script>
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.ImgMain, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <input class="input-lg" type="file" name="filemain" onchange="readURL2(this);" />
                        <img id="filemain" src="~/Content/tn_WallpaperGram.IR_1561882027_z90271.jpg" alt="your image" style="height:auto;width:auto;" class="img-responsive img-thumbnail" />
                        <script>
                            function readURL2(input) {
                                if (input.files && input.files[0]) {
                                    var reader = new FileReader();

                                    reader.onload = function (e) {
                                        $('#filemain')
                                            .attr('src', e.target.result);
                                    };

                                    reader.readAsDataURL(input.files[0]);
                                }
                            }
                        </script>
                    </div>
                </div>
                <hr />
                <div class="form-group">
                  @Html.LabelFor(model => model.ImgMainMob, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <input class="input-lg" type="file" name="filemob" onchange="readURL3(this);" />
                        <img id="filemob" src="~/Content/tn_WallpaperGram.IR_1561882027_z90271.jpg" alt="your image" style="height:auto;width:auto;" class="img-responsive img-thumbnail" />
                        <script>
                            function readURL3(input) {
                                if (input.files && input.files[0]) {
                                    var reader = new FileReader();

                                    reader.onload = function (e) {
                                        $('#filemob')
                                            .attr('src', e.target.result);
                                    };

                                    reader.readAsDataURL(input.files[0]);
                                }
                            }
                        </script>
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">

                        <button class="btn btn-social btn-success" type="submit" v-on:click="AddColor(@Model.Id)">
                            <i class="fa fa-save"></i> ذخیره
                        </button>
                        <a class="btn btn-social btn-pinterest" href="/Admin/Products/index?page=@currentPage">
                            <i class="fa fa-backward"></i> بازگشت
                        </a>

                    </div>
                </div>



            </div>

        }

    </div>

    @section scripts{
        <script src="~/Scripts/vue.js"></script>

        <script src="~/Areas/Admin/content/bower_components/ckeditor/ckeditor.js"></script>
        <script src="~/Areas/Admin/content/bower_components/ckeditor/adapters/jquery.js"></script>


        <script>
            var applist12 = new Vue({
                el: "#createproduct",
                data: {
                    colorsSelected: []

                },
                // متدها
                methods: {
                    //____________________________________________________________________
                    AddColor(id) {
                        vm = this;
                        $.ajax({
                            url: "/Admin/Products/AddColorsProduct",
                            type: "Post",
                            data:
                            {
                                colorsSelected: vm.colorsSelected,
                                id: id
                            }
                        }).done(function () {
                            swal("موفق", "رنگ های مورد نظر با موفقیت  ثبت شد.", "success");
                        });

                    },
                    //____________________________________________________________________

                },



            });




        </script>


    }*@
@model Salino.Models.Product
@using Salino.DataLayer;
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    int currentPage = Convert.ToInt32(ViewBag.currentPage);
    SalinoContext db = new SalinoContext();
}

<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
<link rel="stylesheet" href="~/Areas/Admin/content/plugins/iCheck/all.css">
<script src="~/Content/sweetalert/sweetalert.js"></script>
<link href="~/Content/alertifyjs/alertify.min.css" rel="stylesheet" />
<section class="content-header">
    <h1 style="margin-bottom:15px">
        محصولات

    </h1>
    <ol class="breadcrumb">
        <li><a href="/Admin/Default/Index"><i class="fa fa-dashboard"></i> مدیریت</a></li>
        <li class="active"><a href="/Admin/Products/Index"> محصولات</a></li>
        <li class="active"><a href="/Admin/Products/Create"> محصول جدید</a></li>
    </ol>
</section>
<div class="box box-info container" id="createproduct">


    @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>محصول جدید</h4>

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.GroupId, "گروه", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("GroupId", null, htmlAttributes: new { @class = "form-control", @style = "height: 35px;" })
                    @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.CodeKala, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CodeKala, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CodeKala, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.ColorId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @foreach (var item in db.Colors.ToList())
                    {


                        <label>
                            <input type="checkbox" id="@item.Id" value="@item.Id" v-model="colorsSelected" class="flat-red">
                            @item.color
                        </label>
                    }
                    <button class="btn btn-social btn-success" type="button" v-on:click="AddColor()">
                        <i class="fa fa-refresh"></i> اعمال
                    </button>
                </div>
            </div>
            <hr />


            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />


            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr />



            <div class="form-group">
                @Html.LabelFor(model => model.IsShow, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.EditorFor(model => model.IsShow)
                    @Html.ValidationMessageFor(model => model.IsShow, "", new { @class = "text-danger" })

                </div>
            </div>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.Imgdetail, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input class="input-lg" type="file" name="filedetail" onchange="readURL1(this);" />
                    <img id="blah" src="~/Content/tn_WallpaperGram.IR_1561882027_z90271.jpg" alt="your image" style="height:auto;width:auto;" class="img-responsive img-thumbnail" />
                    <script>
                        function readURL1(input) {
                            if (input.files && input.files[0]) {
                                var reader = new FileReader();

                                reader.onload = function (e) {
                                    $('#blah')
                                        .attr('src', e.target.result);
                                };

                                reader.readAsDataURL(input.files[0]);
                            }
                        }
                    </script>
                </div>
            </div>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.ImgdetailMob, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input class="input-lg" type="file" name="filedetailmob" onchange="readURLdetailMob(this);" />
                    <img id="detailMob" src="~/Content/tn_WallpaperGram.IR_1561882027_z90271.jpg" alt="your image" style="height:auto;width:auto;" class="img-responsive img-thumbnail" />
                    <script>
                        function readURLdetailMob(input) {
                            if (input.files && input.files[0]) {
                                var reader = new FileReader();

                                reader.onload = function (e) {
                                    $('#detailMob')
                                        .attr('src', e.target.result);
                                };

                                reader.readAsDataURL(input.files[0]);
                            }
                        }
                    </script>
                </div>
            </div>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.ImgMain, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input class="input-lg" type="file" name="filemain" onchange="readURL2(this);" />
                    <img id="filemain" src="~/Content/tn_WallpaperGram.IR_1561882027_z90271.jpg" alt="your image" style="height:auto;width:auto;" class="img-responsive img-thumbnail" />
                    <script>
                        function readURL2(input) {
                            if (input.files && input.files[0]) {
                                var reader = new FileReader();

                                reader.onload = function (e) {
                                    $('#filemain')
                                        .attr('src', e.target.result);
                                };

                                reader.readAsDataURL(input.files[0]);
                            }
                        }
                    </script>
                </div>
            </div>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.ImgMainMob, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input class="input-lg" type="file" name="filemob" onchange="readURL3(this);" />
                    <img id="filemob" src="~/Content/tn_WallpaperGram.IR_1561882027_z90271.jpg" alt="your image" style="height:auto;width:auto;" class="img-responsive img-thumbnail" />
                    <script>
                        function readURL3(input) {
                            if (input.files && input.files[0]) {
                                var reader = new FileReader();

                                reader.onload = function (e) {
                                    $('#filemob')
                                        .attr('src', e.target.result);
                                };

                                reader.readAsDataURL(input.files[0]);
                            }
                        }
                    </script>
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    <button class="btn btn-social btn-success" type="submit">
                        <i class="fa fa-save"></i> ذخیره
                    </button>
                    <a class="btn btn-social btn-pinterest" href="/Admin/Products/index?page=@currentPage">
                        <i class="fa fa-backward"></i> بازگشت
                    </a>

                </div>
            </div>



        </div>

    }

</div>
@section scripts{
    <script src="~/Scripts/vue.js"></script>

    <script src="~/Areas/Admin/content/bower_components/ckeditor/ckeditor.js"></script>
    <script src="~/Areas/Admin/content/bower_components/ckeditor/adapters/jquery.js"></script>


    <script>
        var applist12 = new Vue({
            el: "#createproduct",
            data: {
                colorsSelected: []

            },
            // متدها
            methods: {
                //____________________________________________________________________
                AddColor() {
                    vm = this;
                    $.ajax({
                        url: "/Admin/Products/AddColorsProduct",
                        type: "Post",
                        data:
                        {
                            colorsSelected: vm.colorsSelected,

                        }
                    }).done(function () {
                        swal("موفق", "رنگ های مورد نظر با موفقیت  ثبت شد.", "success");
                    });

                },
                //____________________________________________________________________

            },



        });

        $(function () {
            $('#Description').ckeditor();
        });


    </script>

}